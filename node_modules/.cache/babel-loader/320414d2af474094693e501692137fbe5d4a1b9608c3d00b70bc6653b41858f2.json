{"ast":null,"code":"var _jsxFileName = \"/Users/jackolsen/Desktop/JavaScript/Professor-Arti/src/Components/ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      text: input,\n      sender: \"user\"\n    };\n    setMessages([...messages, userMessage]);\n    try {\n      const response = await axios.post(\"http://localhost:8000/chat/\", new URLSearchParams({\n        user_input: input\n      }));\n      const botMessage = {\n        text: response.data.response,\n        sender: \"bot\"\n      };\n      setMessages([...messages, userMessage, botMessage]);\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n    setInput(\"\");\n  };\n  return (\n    /*#__PURE__*/\n    // <div>\n    //     <h2>Chatbot</h2>\n    //     <div style={{ border: \"1px solid black\", padding: \"10px\", height: \"300px\", overflowY: \"scroll\" }}>\n    //         {messages.map((msg, index) => (\n    //             <div key={index} style={{ textAlign: msg.sender === \"user\" ? \"right\" : \"left\" }}>\n    //                 <strong>{msg.sender}:</strong> {msg.text}\n    //             </div>\n    //         ))}\n    //     </div>\n    //     <input\n    //         type=\"text\"\n    //         value={input}\n    //         onChange={(e) => setInput(e.target.value)}\n    //         placeholder=\"Ask something...\"\n    //     />\n    //     <button onClick={sendMessage}>Send</button>\n    // </div>\n    // <div className=\"chatbot-container\">\n    //     <h2>ChatBot</h2>\n    //     <div className=\"chatbot\" ></div>\n    // </div>\n    _jsxDEV(\"div\", {\n      class: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"chat-box\",\n        id: \"chat-box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        autocomplete: \"off\",\n        type: \"text\",\n        id: \"chat-input\",\n        placeholder: \"Ask \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"send-clear\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"send-btn\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"clear-btn\",\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"recreate\",\n          children: \"Recreate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(Chatbot, \"bxrUXnlHDt+zalfpk8IFX5tJV48=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","sendMessage","trim","userMessage","text","sender","response","post","URLSearchParams","user_input","botMessage","data","error","console","class","children","id","fileName","_jsxFileName","lineNumber","columnNumber","autocomplete","type","placeholder","_c","$RefreshReg$"],"sources":["/Users/jackolsen/Desktop/JavaScript/Professor-Arti/src/Components/ChatBot.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst Chatbot = () => {\n    const [messages, setMessages] = useState([]);\n    const [input, setInput] = useState(\"\");\n\n    const sendMessage = async () => {\n        if (!input.trim()) return;\n\n        const userMessage = { text: input, sender: \"user\" };\n        setMessages([...messages, userMessage]);\n\n        try {\n            const response = await axios.post(\"http://localhost:8000/chat/\", new URLSearchParams({ user_input: input }));\n\n            const botMessage = { text: response.data.response, sender: \"bot\" };\n            setMessages([...messages, userMessage, botMessage]);\n        } catch (error) {\n            console.error(\"Error:\", error);\n        }\n\n        setInput(\"\");\n    };\n\n    return (\n        // <div>\n        //     <h2>Chatbot</h2>\n        //     <div style={{ border: \"1px solid black\", padding: \"10px\", height: \"300px\", overflowY: \"scroll\" }}>\n        //         {messages.map((msg, index) => (\n        //             <div key={index} style={{ textAlign: msg.sender === \"user\" ? \"right\" : \"left\" }}>\n        //                 <strong>{msg.sender}:</strong> {msg.text}\n        //             </div>\n        //         ))}\n        //     </div>\n        //     <input\n        //         type=\"text\"\n        //         value={input}\n        //         onChange={(e) => setInput(e.target.value)}\n        //         placeholder=\"Ask something...\"\n        //     />\n        //     <button onClick={sendMessage}>Send</button>\n        // </div>\n\n\n        // <div className=\"chatbot-container\">\n        //     <h2>ChatBot</h2>\n        //     <div className=\"chatbot\" ></div>\n        // </div>\n        <div class=\"chat-container\">\n            <div class=\"chat-box\" id=\"chat-box\"></div>\n            <input autocomplete=\"off\" type=\"text\" id=\"chat-input\" placeholder=\"Ask \" />\n            <div class=\"buttons\">\n                <div class=\"send-clear\">\n                    <button id=\"send-btn\">Send</button>\n                    <button id=\"clear-btn\">Clear</button>\n                </div>\n                <button id=\"recreate\">Recreate</button>\n            </div>\n        </div>\n    );\n};\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}