{"ast":null,"code":"var _jsxFileName = \"/Users/jackolsen/Desktop/everything/Code/JavaScript/ProfessorArti/src/Components/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ProfessorGraph from \"./ProfessorGraph\";\nimport axios from \"axios\";\nimport \"../App.css\";\nimport \"../styles/delete.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5001/api';\nconst Home = () => {\n  _s();\n  const [graphData, setGraphData] = useState({\n    nodes: [],\n    links: []\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [newProfessor, setNewProfessor] = useState(\"\");\n\n  // Fetch graph data from backend on component mount\n  useEffect(() => {\n    const fetchGraphData = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(`${API_BASE_URL}/graph/data`);\n        if (response.data.success) {\n          setGraphData(response.data.data);\n          setError(null);\n        } else {\n          throw new Error('Failed to fetch graph data');\n        }\n      } catch (err) {\n        console.error('Error fetching graph data:', err);\n        setError('Failed to load graph data');\n        // Fallback to default data\n        setGraphData({\n          nodes: [{\n            id: \"Professor Arti\",\n            group: 0,\n            size: 75\n          }],\n          links: []\n        });\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchGraphData();\n  }, []);\n  const addProfessor = () => {\n    if (newProfessor.trim() === \"\") return;\n    const newProf = {\n      id: newProfessor,\n      group: 1,\n      size: 35\n    };\n    setGraphData(prevData => ({\n      nodes: [...prevData.nodes, newProf],\n      links: [...prevData.links, {\n        source: \"Professor Arti\",\n        target: newProfessor,\n        value: 2\n      }]\n    }));\n    setNewProfessor(\"\");\n  };\n  const deleteProfessors = () => {\n    const resetData = {\n      nodes: [{\n        id: \"Professor Arti\",\n        group: 0,\n        size: 75\n      }],\n      links: []\n    };\n    setGraphData(resetData);\n    localStorage.setItem(\"graphData\", JSON.stringify(resetData));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"data-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome Jack\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Professor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"add-professor\",\n          type: \"text\",\n          value: newProfessor,\n          onChange: e => setNewProfessor(e.target.value),\n          placeholder: \"Enter professor name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"add\",\n          onClick: addProfessor,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"graph-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"delete-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: deleteProfessors,\n          class: \"button\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            viewBox: \"0 0 448 512\",\n            class: \"svgIcon\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M135.2 17.7L128 32H32C14.3 32 0 46.3 0 64S14.3 96 32 96H416c17.7 0 32-14.3 32-32s-14.3-32-32-32H320l-7.2-14.3C307.4 6.8 296.3 0 284.2 0H163.8c-12.1 0-23.2 6.8-28.6 17.7zM416 128H32L53.2 467c1.6 25.3 22.6 45 47.9 45H346.9c25.3 0 46.3-19.7 47.9-45L416 128z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 68\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProfessorGraph, {\n        className: \"graph\",\n        data: graphData,\n        setData: setGraphData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"bv0aUZF57T+HC8iaSgx4+8ned6k=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","ProfessorGraph","axios","jsxDEV","_jsxDEV","API_BASE_URL","Home","_s","graphData","setGraphData","nodes","links","loading","setLoading","error","setError","newProfessor","setNewProfessor","fetchGraphData","response","get","data","success","Error","err","console","id","group","size","addProfessor","trim","newProf","prevData","source","target","value","deleteProfessors","resetData","localStorage","setItem","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","placeholder","onClick","class","viewBox","d","setData","_c","$RefreshReg$"],"sources":["/Users/jackolsen/Desktop/everything/Code/JavaScript/ProfessorArti/src/Components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ProfessorGraph from \"./ProfessorGraph\";\nimport axios from \"axios\";\nimport \"../App.css\";\nimport \"../styles/delete.css\"\n\nconst API_BASE_URL = 'http://localhost:5001/api';\n\nconst Home = () => {\n    const [graphData, setGraphData] = useState({\n        nodes: [],\n        links: []\n    });\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    const [newProfessor, setNewProfessor] = useState(\"\");\n\n    // Fetch graph data from backend on component mount\n    useEffect(() => {\n        const fetchGraphData = async () => {\n            try {\n                setLoading(true);\n                const response = await axios.get(`${API_BASE_URL}/graph/data`);\n                if (response.data.success) {\n                    setGraphData(response.data.data);\n                    setError(null);\n                } else {\n                    throw new Error('Failed to fetch graph data');\n                }\n            } catch (err) {\n                console.error('Error fetching graph data:', err);\n                setError('Failed to load graph data');\n                // Fallback to default data\n                setGraphData({\n                    nodes: [{ id: \"Professor Arti\", group: 0, size: 75 }],\n                    links: []\n                });\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchGraphData();\n    }, []);\n\n    const addProfessor = () => {\n        if (newProfessor.trim() === \"\") return;\n        const newProf = { id: newProfessor, group: 1, size: 35 };\n        setGraphData(prevData => ({\n            nodes: [...prevData.nodes, newProf],\n            links: [...prevData.links, { source: \"Professor Arti\", target: newProfessor, value: 2 }]\n        }));\n        setNewProfessor(\"\");\n    };\n\n    const deleteProfessors = () => {\n\n        const resetData = {\n            nodes: [{ id: \"Professor Arti\", group: 0, size: 75 }],\n            links: []\n        };\n\n        setGraphData(resetData);\n        localStorage.setItem(\"graphData\", JSON.stringify(resetData));\n    }\n\n    return (\n        <div className=\"main-container\">\n            <section className=\"data-input-container\">\n                <h1>Welcome Jack</h1>\n                <h2>Add Professor</h2>\n                <div className=\"data-input\" >\n                    <input\n                        className=\"add-professor\"\n                        type=\"text\"\n                        value={newProfessor}\n                        onChange={(e) => setNewProfessor(e.target.value)}\n                        placeholder=\"Enter professor name\"\n                    />\n                    <button id=\"add\" onClick={addProfessor}>Add</button>\n                </div>\n\n\n            </section>\n            <section className=\"graph-data\">\n\n                {/* <div className=\"graph-container\" >\n                    <ProfessorGraph className=\"\" data={graphData} setData={setGraphData} />\n                </div> */}\n                <div className=\"delete-container\" >\n                    <button onClick={deleteProfessors} class=\"button\">\n                        <svg viewBox=\"0 0 448 512\" class=\"svgIcon\"><path d=\"M135.2 17.7L128 32H32C14.3 32 0 46.3 0 64S14.3 96 32 96H416c17.7 0 32-14.3 32-32s-14.3-32-32-32H320l-7.2-14.3C307.4 6.8 296.3 0 284.2 0H163.8c-12.1 0-23.2 6.8-28.6 17.7zM416 128H32L53.2 467c1.6 25.3 22.6 45 47.9 45H346.9c25.3 0 46.3-19.7 47.9-45L416 128z\"></path></svg>\n                    </button>\n                </div>\n                <ProfessorGraph className=\"graph\" data={graphData} setData={setGraphData} />\n\n\n\n\n\n            </section>\n\n\n        </div >\n    );\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}