{"ast":null,"code":"var _jsxFileName = \"/Users/jackolsen/Desktop/JavaScript/Professor-Arti/src/Components/ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = ({\n  professor\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const sendMessage = async () => {\n    console.log(\"Sending message\");\n    if (!input.trim()) return;\n    const userMessage = {\n      text: input,\n      sender: \"user\"\n    };\n    setMessages([...messages, userMessage]);\n    try {\n      const response = await axios.post(\"http://127.0.0.1:5000/chat\", new URLSearchParams({\n        user_input: input\n      }));\n      const botMessage = {\n        text: response.data.response,\n        sender: \"bot\"\n      };\n      setMessages([...messages, userMessage, botMessage]);\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Chat with \", professor]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"chat-box\",\n      children: messages.map((msg, index) => {\n        /*#__PURE__*/_jsxDEV(\"div\", {\n          className: msg.sender === \"user\" ? \"user-message\" : \"bot-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.sender, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), \" \", msg.text]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      autocomplete: \"off\",\n      type: \"text\",\n      id: \"chat-input\",\n      placeholder: `Ask ${professor || \"the professor\"} a question...`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"send\",\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"clear\",\n        onClick: () => setMessages([]),\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Chatbot, \"bxrUXnlHDt+zalfpk8IFX5tJV48=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Chatbot","professor","_s","messages","setMessages","input","setInput","sendMessage","console","log","trim","userMessage","text","sender","response","post","URLSearchParams","user_input","botMessage","data","error","class","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","className","autocomplete","type","id","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/jackolsen/Desktop/JavaScript/Professor-Arti/src/Components/ChatBot.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst Chatbot = ({ professor }) => {\n    const [messages, setMessages] = useState([]);\n    const [input, setInput] = useState(\"\");\n\n    const sendMessage = async () => {\n        console.log(\"Sending message\");\n        if (!input.trim()) return;\n\n        const userMessage = { text: input, sender: \"user\" };\n        setMessages([...messages, userMessage]);\n\n        try {\n            const response = await axios.post(\"http://127.0.0.1:5000/chat\", new URLSearchParams({ user_input: input }));\n\n            const botMessage = { text: response.data.response, sender: \"bot\" };\n            setMessages([...messages, userMessage, botMessage]);\n        } catch (error) {\n            console.error(\"Error:\", error);\n        }\n\n        setInput(\"\");\n    };\n\n    return (\n\n        <div class=\"chat-container\">\n            <h1>Chat with {professor}</h1>\n            <div class=\"chat-box\">\n                {messages.map((msg, index) => {\n                    <div key={index} className={msg.sender === \"user\" ? \"user-message\" : \"bot-message\"} >\n                        <strong>{msg.sender}: </strong> {msg.text}\n                    </div>\n                })}\n            </div>\n            <input\n                autocomplete=\"off\"\n                type=\"text\"\n                id=\"chat-input\"\n                placeholder={`Ask ${professor || \"the professor\"} a question...`}\n\n            />\n            <div class=\"buttons\">\n                <button id=\"send\" onClick={sendMessage}>Send</button>\n                <button id=\"clear\" onClick={() => setMessages([])} >Clear</button>\n            </div>\n        </div>\n    );\n};\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}