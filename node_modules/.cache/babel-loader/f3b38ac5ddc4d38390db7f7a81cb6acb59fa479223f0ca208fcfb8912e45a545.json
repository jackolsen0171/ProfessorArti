{"ast":null,"code":"var _jsxFileName = \"/Users/jackolsen/Desktop/JavaScript/graph-test/src/GraphView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphView = () => {\n  _s();\n  const [nodes, setNodes] = useState([{\n    id: \"Professor Arti\"\n  }]);\n  const [links, setLinks] = useState([]);\n  const [counter, setCounter] = useState(1);\n  useEffect(() => {\n    const svg = d3.select(\"#graph\").attr(\"width\", 600).attr(\"height\", 400);\n    const simulation = d3.forceSimulation(nodes).force(\"link\", d3.forceLink(links).id(d => d.id).distance(100)).force(\"charge\", d3.forceManyBody().strength(-200)).force(\"center\", d3.forceCenter(300, 200));\n    const link = svg.selectAll(\".link\").data(links).enter().append(\"line\").attr(\"class\", \"link\").style(\"stroke\", \"#999\");\n    const node = svg.selectAll(\".node\").data(nodes).enter().append(\"circle\").attr(\"class\", \"node\").attr(\"r\", 20).style(\"fill\", (d, i) => i === 0 ? \"red\" : \"blue\");\n    const label = svg.selectAll(\".label\").data(nodes).enter().append(\"text\").attr(\"class\", \"label\").attr(\"dy\", 5).text(d => d.id);\n    simulation.on(\"tick\", () => {\n      link.attr(\"x1\", d => d.source.x).attr(\"y1\", d => d.source.y).attr(\"x2\", d => d.target.x).attr(\"y2\", d => d.target.y);\n      node.attr(\"cx\", d => d.x).attr(\"cy\", d => d.y);\n      label.attr(\"x\", d => d.x).attr(\"y\", d => d.y);\n    });\n  }, [nodes, links]);\n  const addNode = () => {\n    const newNode = {\n      id: counter.toString()\n    };\n    setNodes([...nodes, newNode]);\n    setLinks([...links, {\n      source: \"Professor Arti\",\n      target: newNode.id\n    }]);\n    setCounter(counter + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      id: \"graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNode,\n      children: \"Add Node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(GraphView, \"1YKg1kISVYMZ0vJ5m7BlQXKzT/4=\");\n_c = GraphView;\nexport default GraphView;\nvar _c;\n$RefreshReg$(_c, \"GraphView\");","map":{"version":3,"names":["React","useEffect","useState","d3","jsxDEV","_jsxDEV","GraphView","_s","nodes","setNodes","id","links","setLinks","counter","setCounter","svg","select","attr","simulation","forceSimulation","force","forceLink","d","distance","forceManyBody","strength","forceCenter","link","selectAll","data","enter","append","style","node","i","label","text","on","source","x","y","target","addNode","newNode","toString","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/jackolsen/Desktop/JavaScript/graph-test/src/GraphView.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport * as d3 from \"d3\";\n\nconst GraphView = () => {\n    const [nodes, setNodes] = useState([{ id: \"Professor Arti\" }]);\n    const [links, setLinks] = useState([]);\n    const [counter, setCounter] = useState(1);\n\n    useEffect(() => {\n        const svg = d3.select(\"#graph\").attr(\"width\", 600).attr(\"height\", 400);\n        const simulation = d3.forceSimulation(nodes)\n            .force(\"link\", d3.forceLink(links).id(d => d.id).distance(100))\n            .force(\"charge\", d3.forceManyBody().strength(-200))\n            .force(\"center\", d3.forceCenter(300, 200));\n\n        const link = svg\n            .selectAll(\".link\")\n            .data(links)\n            .enter()\n            .append(\"line\")\n            .attr(\"class\", \"link\")\n            .style(\"stroke\", \"#999\");\n\n        const node = svg.selectAll(\".node\").data(nodes).enter()\n            .append(\"circle\").attr(\"class\", \"node\")\n            .attr(\"r\", 20).style(\"fill\", (d, i) => (i === 0 ? \"red\" : \"blue\"));\n\n        const label = svg.selectAll(\".label\").data(nodes).enter()\n            .append(\"text\").attr(\"class\", \"label\").attr(\"dy\", 5)\n            .text(d => d.id);\n\n        simulation.on(\"tick\", () => {\n            link.attr(\"x1\", d => d.source.x).attr(\"y1\", d => d.source.y)\n                .attr(\"x2\", d => d.target.x).attr(\"y2\", d => d.target.y);\n\n            node.attr(\"cx\", d => d.x).attr(\"cy\", d => d.y);\n            label.attr(\"x\", d => d.x).attr(\"y\", d => d.y);\n        });\n    }, [nodes, links]);\n\n    const addNode = () => {\n        const newNode = { id: counter.toString() };\n        setNodes([...nodes, newNode]);\n        setLinks([...links, { source: \"Professor Arti\", target: newNode.id }]);\n        setCounter(counter + 1);\n    };\n\n    return (\n        <div>\n            <svg id=\"graph\"></svg>\n            <button onClick={addNode}>Add Node</button>\n        </div>\n    );\n};\n\nexport default GraphView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}