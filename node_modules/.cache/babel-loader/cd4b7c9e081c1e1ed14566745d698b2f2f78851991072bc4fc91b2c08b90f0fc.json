{"ast":null,"code":"var _jsxFileName = \"/Users/jackolsen/Desktop/everything/Code/JavaScript/ProfessorArti/src/Components/ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5001/api';\nconst Chatbot = ({\n  professor\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [conversationId, setConversationId] = useState(null);\n  const [professorInfo, setProfessorInfo] = useState(null);\n\n  // Load professor info on mount\n  useEffect(() => {\n    const loadProfessorInfo = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/chat/professors`);\n        if (response.data.success) {\n          const prof = response.data.data.find(p => p.id === professor);\n          setProfessorInfo(prof || {\n            id: professor,\n            name: professor || 'Professor',\n            specialty: 'General Knowledge',\n            description: 'AI assistant ready to help',\n            avatar: '🤖'\n          });\n        }\n      } catch (err) {\n        console.error('Error loading professor info:', err);\n        setProfessorInfo({\n          id: professor,\n          name: professor || 'Professor',\n          specialty: 'General Knowledge',\n          description: 'AI assistant ready to help',\n          avatar: '🤖'\n        });\n      }\n    };\n    if (professor) {\n      loadProfessorInfo();\n    }\n  }, [professor]);\n  const sendMessage = async () => {\n    if (!input.trim() || loading) return;\n    const userMessage = {\n      text: input,\n      sender: \"user\",\n      timestamp: new Date().toISOString()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post(`${API_BASE_URL}/chat`, {\n        message: input,\n        professorId: professor || 'ai-tutor',\n        conversationId: conversationId\n      });\n      if (response.data.success) {\n        const botMessage = {\n          text: response.data.data.message,\n          sender: \"bot\",\n          timestamp: response.data.data.timestamp,\n          professorId: response.data.data.professorId,\n          sources: response.data.data.sources || []\n        };\n        setMessages(prev => [...prev, botMessage]);\n\n        // Set conversation ID if this is the first message\n        if (!conversationId) {\n          setConversationId(response.data.data.conversationId);\n        }\n      } else {\n        throw new Error('Failed to get response from AI');\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setError('Failed to send message. Please try again.');\n\n      // Add error message to chat\n      const errorMessage = {\n        text: \"Sorry, I'm having trouble responding right now. Please try again in a moment.\",\n        sender: \"bot\",\n        timestamp: new Date().toISOString(),\n        isError: true\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setLoading(false);\n    }\n    setInput(\"\");\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n  const clearMessages = () => {\n    setMessages([]);\n    setConversationId(null);\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [professorInfo === null || professorInfo === void 0 ? void 0 : professorInfo.avatar, \" Chat with \", (professorInfo === null || professorInfo === void 0 ? void 0 : professorInfo.name) || professor]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), (professorInfo === null || professorInfo === void 0 ? void 0 : professorInfo.specialty) && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: '#006B96',\n          fontSize: '14px',\n          margin: '5px 0',\n          fontStyle: 'italic'\n        },\n        children: [\"Specializes in: \", professorInfo.specialty]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this), (professorInfo === null || professorInfo === void 0 ? void 0 : professorInfo.description) && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: '#666',\n          fontSize: '12px',\n          margin: '0 0 15px 0'\n        },\n        children: professorInfo.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: '#ED1B2F',\n        background: '#ffe6e6',\n        padding: '10px',\n        borderRadius: '5px',\n        margin: '10px 0',\n        fontSize: '14px'\n      },\n      children: [\"\\u26A0\\uFE0F \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [messages.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#666',\n          fontStyle: 'italic',\n          textAlign: 'center',\n          padding: '20px'\n        },\n        children: [\"Start a conversation with \", (professorInfo === null || professorInfo === void 0 ? void 0 : professorInfo.name) || professor, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }, this), messages.map((msg, index) => {\n        const isUser = msg.sender === \"user\";\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: isUser ? \"user-message\" : \"bot-message\",\n          style: {\n            opacity: msg.isError ? 0.7 : 1,\n            borderLeft: msg.isError ? '3px solid #ED1B2F' : 'none'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [isUser ? \"You\" : (professorInfo === null || professorInfo === void 0 ? void 0 : professorInfo.name) || \"Professor\", \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 33\n            }, this), msg.timestamp && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '10px',\n                color: '#999',\n                marginLeft: '10px'\n              },\n              children: new Date(msg.timestamp).toLocaleTimeString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this), msg.sources && msg.sources.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '11px',\n              color: '#666',\n              marginTop: '5px',\n              fontStyle: 'italic'\n            },\n            children: [\"Sources: \", msg.sources.map(s => s.title).join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }, this);\n      }), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          color: '#006B96',\n          padding: '10px',\n          fontStyle: 'italic'\n        },\n        children: [(professorInfo === null || professorInfo === void 0 ? void 0 : professorInfo.name) || 'Professor', \" is thinking...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        autoComplete: \"off\",\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: handleKeyPress,\n        id: \"chat-input\",\n        placeholder: `Ask ${(professorInfo === null || professorInfo === void 0 ? void 0 : professorInfo.name) || professor || \"the professor\"} a question...`,\n        disabled: loading,\n        style: {\n          opacity: loading ? 0.6 : 1,\n          cursor: loading ? 'not-allowed' : 'text'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"send\",\n          onClick: sendMessage,\n          disabled: loading || !input.trim(),\n          style: {\n            opacity: loading || !input.trim() ? 0.6 : 1,\n            cursor: loading || !input.trim() ? 'not-allowed' : 'pointer'\n          },\n          children: loading ? 'Sending...' : 'Send'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"clear\",\n          onClick: clearMessages,\n          disabled: loading,\n          style: {\n            opacity: loading ? 0.6 : 1,\n            cursor: loading ? 'not-allowed' : 'pointer'\n          },\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n};\n_s(Chatbot, \"0yBmdo4T87M1tzeq3yFsgLqmIXc=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","API_BASE_URL","Chatbot","professor","_s","messages","setMessages","input","setInput","loading","setLoading","error","setError","conversationId","setConversationId","professorInfo","setProfessorInfo","loadProfessorInfo","response","get","data","success","prof","find","p","id","name","specialty","description","avatar","err","console","sendMessage","trim","userMessage","text","sender","timestamp","Date","toISOString","prev","post","message","professorId","botMessage","sources","Error","errorMessage","isError","handleKeyPress","e","key","shiftKey","preventDefault","clearMessages","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","fontSize","margin","fontStyle","background","padding","borderRadius","length","textAlign","map","msg","index","isUser","opacity","borderLeft","marginLeft","toLocaleTimeString","marginTop","s","title","join","autoComplete","type","value","onChange","target","onKeyPress","placeholder","disabled","cursor","onClick","_c","$RefreshReg$"],"sources":["/Users/jackolsen/Desktop/everything/Code/JavaScript/ProfessorArti/src/Components/ChatBot.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst API_BASE_URL = 'http://localhost:5001/api';\n\nconst Chatbot = ({ professor }) => {\n    const [messages, setMessages] = useState([]);\n    const [input, setInput] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [conversationId, setConversationId] = useState(null);\n    const [professorInfo, setProfessorInfo] = useState(null);\n\n    // Load professor info on mount\n    useEffect(() => {\n        const loadProfessorInfo = async () => {\n            try {\n                const response = await axios.get(`${API_BASE_URL}/chat/professors`);\n                if (response.data.success) {\n                    const prof = response.data.data.find(p => p.id === professor);\n                    setProfessorInfo(prof || {\n                        id: professor,\n                        name: professor || 'Professor',\n                        specialty: 'General Knowledge',\n                        description: 'AI assistant ready to help',\n                        avatar: '🤖'\n                    });\n                }\n            } catch (err) {\n                console.error('Error loading professor info:', err);\n                setProfessorInfo({\n                    id: professor,\n                    name: professor || 'Professor',\n                    specialty: 'General Knowledge',\n                    description: 'AI assistant ready to help',\n                    avatar: '🤖'\n                });\n            }\n        };\n\n        if (professor) {\n            loadProfessorInfo();\n        }\n    }, [professor]);\n\n    const sendMessage = async () => {\n        if (!input.trim() || loading) return;\n\n        const userMessage = { \n            text: input, \n            sender: \"user\",\n            timestamp: new Date().toISOString()\n        };\n        \n        setMessages(prev => [...prev, userMessage]);\n        setLoading(true);\n        setError(null);\n\n        try {\n            const response = await axios.post(`${API_BASE_URL}/chat`, {\n                message: input,\n                professorId: professor || 'ai-tutor',\n                conversationId: conversationId\n            });\n\n            if (response.data.success) {\n                const botMessage = { \n                    text: response.data.data.message,\n                    sender: \"bot\",\n                    timestamp: response.data.data.timestamp,\n                    professorId: response.data.data.professorId,\n                    sources: response.data.data.sources || []\n                };\n\n                setMessages(prev => [...prev, botMessage]);\n                \n                // Set conversation ID if this is the first message\n                if (!conversationId) {\n                    setConversationId(response.data.data.conversationId);\n                }\n            } else {\n                throw new Error('Failed to get response from AI');\n            }\n        } catch (error) {\n            console.error(\"Error:\", error);\n            setError('Failed to send message. Please try again.');\n            \n            // Add error message to chat\n            const errorMessage = {\n                text: \"Sorry, I'm having trouble responding right now. Please try again in a moment.\",\n                sender: \"bot\",\n                timestamp: new Date().toISOString(),\n                isError: true\n            };\n            setMessages(prev => [...prev, errorMessage]);\n        } finally {\n            setLoading(false);\n        }\n\n        setInput(\"\");\n    };\n\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            sendMessage();\n        }\n    };\n\n    const clearMessages = () => {\n        setMessages([]);\n        setConversationId(null);\n        setError(null);\n    };\n\n    return (\n        <div className=\"chat-container\">\n            <div className=\"chat-header\">\n                <h1>\n                    {professorInfo?.avatar} Chat with {professorInfo?.name || professor}\n                </h1>\n                {professorInfo?.specialty && (\n                    <p style={{ \n                        color: '#006B96', \n                        fontSize: '14px', \n                        margin: '5px 0',\n                        fontStyle: 'italic'\n                    }}>\n                        Specializes in: {professorInfo.specialty}\n                    </p>\n                )}\n                {professorInfo?.description && (\n                    <p style={{ \n                        color: '#666', \n                        fontSize: '12px', \n                        margin: '0 0 15px 0'\n                    }}>\n                        {professorInfo.description}\n                    </p>\n                )}\n            </div>\n\n            {error && (\n                <div style={{ \n                    color: '#ED1B2F', \n                    background: '#ffe6e6', \n                    padding: '10px', \n                    borderRadius: '5px',\n                    margin: '10px 0',\n                    fontSize: '14px'\n                }}>\n                    ⚠️ {error}\n                </div>\n            )}\n\n            <div className=\"chat-box\">\n                {messages.length === 0 && (\n                    <div style={{\n                        color: '#666',\n                        fontStyle: 'italic',\n                        textAlign: 'center',\n                        padding: '20px'\n                    }}>\n                        Start a conversation with {professorInfo?.name || professor}!\n                    </div>\n                )}\n                {messages.map((msg, index) => {\n                    const isUser = msg.sender === \"user\";\n                    return (\n                        <div \n                            key={index} \n                            className={isUser ? \"user-message\" : \"bot-message\"}\n                            style={{\n                                opacity: msg.isError ? 0.7 : 1,\n                                borderLeft: msg.isError ? '3px solid #ED1B2F' : 'none'\n                            }}\n                        >\n                            <div className=\"message-header\">\n                                <strong>\n                                    {isUser ? \"You\" : professorInfo?.name || \"Professor\"}: \n                                </strong>\n                                {msg.timestamp && (\n                                    <span style={{ fontSize: '10px', color: '#999', marginLeft: '10px' }}>\n                                        {new Date(msg.timestamp).toLocaleTimeString()}\n                                    </span>\n                                )}\n                            </div>\n                            <div className=\"message-content\">\n                                {msg.text}\n                            </div>\n                            {msg.sources && msg.sources.length > 0 && (\n                                <div style={{ \n                                    fontSize: '11px', \n                                    color: '#666', \n                                    marginTop: '5px',\n                                    fontStyle: 'italic'\n                                }}>\n                                    Sources: {msg.sources.map(s => s.title).join(', ')}\n                                </div>\n                            )}\n                        </div>\n                    );\n                })}\n                {loading && (\n                    <div style={{ \n                        textAlign: 'center', \n                        color: '#006B96',\n                        padding: '10px',\n                        fontStyle: 'italic'\n                    }}>\n                        {professorInfo?.name || 'Professor'} is thinking...\n                    </div>\n                )}\n            </div>\n\n            <div className=\"chat-input-container\">\n                <input\n                    autoComplete=\"off\"\n                    type=\"text\"\n                    value={input}\n                    onChange={(e) => setInput(e.target.value)}\n                    onKeyPress={handleKeyPress}\n                    id=\"chat-input\"\n                    placeholder={`Ask ${professorInfo?.name || professor || \"the professor\"} a question...`}\n                    disabled={loading}\n                    style={{\n                        opacity: loading ? 0.6 : 1,\n                        cursor: loading ? 'not-allowed' : 'text'\n                    }}\n                />\n                <div className=\"buttons\">\n                    <button \n                        id=\"send\" \n                        onClick={sendMessage}\n                        disabled={loading || !input.trim()}\n                        style={{\n                            opacity: (loading || !input.trim()) ? 0.6 : 1,\n                            cursor: (loading || !input.trim()) ? 'not-allowed' : 'pointer'\n                        }}\n                    >\n                        {loading ? 'Sending...' : 'Send'}\n                    </button>\n                    <button \n                        id=\"clear\" \n                        onClick={clearMessages}\n                        disabled={loading}\n                        style={{\n                            opacity: loading ? 0.6 : 1,\n                            cursor: loading ? 'not-allowed' : 'pointer'\n                        }}\n                    >\n                        Clear\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Chatbot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}